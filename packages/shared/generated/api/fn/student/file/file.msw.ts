/**
 * Generated by orval v6.24.0 🍺
 * Do not edit manually.
 * CLUS API
 * CLUS Backend API Spec
 * OpenAPI spec version: v1.0.0
 */
import { faker } from "@faker-js/faker";
import { HttpResponse, delay, http } from "msw";
import type { UploadFileResponse } from "../../../model";

export const getUploadStudentFileMock = (
  overrideResponse: any = {}
): UploadFileResponse => ({
  fileUrl: faker.word.sample(),
  uploadFileId: faker.word.sample(),
  ...overrideResponse,
});

export const getGetDrillContentFileUrlELDE638Mock = (): string =>
  faker.word.sample();

export const getUploadStudentFileMockHandler = (
  overrideResponse?: UploadFileResponse
) => {
  return http.post("*/clus/files", async () => {
    await delay(1000);
    return new HttpResponse(
      JSON.stringify(
        overrideResponse ? overrideResponse : getUploadStudentFileMock()
      ),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
        },
      }
    );
  });
};

export const getGetDrillContentFileUrlELDE638MockHandler = (
  overrideResponse?: string
) => {
  return http.get(
    "*/clus/files/clinics/:clinicId/students/drill-contents/:drillContentId",
    async () => {
      await delay(1000);
      return new HttpResponse(
        JSON.stringify(
          overrideResponse
            ? overrideResponse
            : getGetDrillContentFileUrlELDE638Mock()
        ),
        {
          status: 200,
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
    }
  );
};
export const getFileMock = () => [
  getUploadStudentFileMockHandler(),
  getGetDrillContentFileUrlELDE638MockHandler(),
];
